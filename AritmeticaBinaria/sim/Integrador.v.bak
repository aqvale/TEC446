module Integrador();
	
	reg clock, reset;
	wire hab_Leitura, hab_Leitura_, hab_EscritaBR;
	wire [6:0] endereco_Memoria;
	wire [15:0] saida_A, saida_B;
	wire [31:0] saida_Memoria;
	wire [4:0] expoente_A, expoente_B, expoente_B_ajustado;
	wire [10:0] mantissa_B, mantissa_B_ajustado;
	
	initial  begin
		clock = 1'b1;
		reset = 1'b1;
		#10;
		reset = 1'b0;
	end
	
	always #5 clock = ~clock;
	
	Controler Controler(
	.clock(clock), 
	.reset(reset), 
	.endereco_Memoria(endereco_Memoria), 
	.hab_Leitura(hab_Leitura), 
	.hab_Leitura_(hab_Leitura_), 
	.hab_EscritaBR(hab_EscritaBR), 
	.entrada_A(saida_A), 
	.entrada_B(saida_B),
	.expoente_A(expoente_A), 
	.expoente_B(expoente_B),
	.mantissa_B(mantissa_B)
	);
	
	Memoria Memoria(
    .clk(clock),
    .sink_address(endereco_Memoria),  	// Address input
    .src_data(saida_Memoria), 			// Data output
    .sink_ren(hab_Leitura),      		// Read Enable
    .sink_cen(hab_Leitura_),     		// Chip Enable
	.reset(reset)
	);
	
	Banco_Registro Banco_Registro(
	.hab_escrita(hab_EscritaBR), 
	.reset(reset), 
	.clock(clock), 
	.A(saida_A), 
	.B(saida_B),
	.entrada(saida_Memoria)
	);
	
	Descocamento Descocamento(
	.expoente_A(expoente_A), 
	.expoente_B(expoente_B), 
	.mantissa_B(mantissa_B), 
	.mantissa_B_ajustado(mantissa_B_ajustado), 
	.expoente_B_ajustado(expoente_B_ajustado)
	);	
endmodule 
